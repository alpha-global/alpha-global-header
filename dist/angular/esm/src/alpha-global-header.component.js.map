{"version":3,"sources":["../../../../src/angular/src/alpha-global-header.component.ts"],"names":[],"mappings":"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","file":"alpha-global-header.component.js","sourceRoot":"","sourcesContent":["import {\n\tComponent,\n\tInput,\n\tDirective,\n\tViewEncapsulation,\n\tHostBinding,\n\tAfterContentInit,\n\tAfterViewInit,\n\tContentChildren,\n\tViewChild,\n\tQueryList,\n\tElementRef,\n\tHostListener\n\n} from '@angular/core';\n\nimport { registerMenu } from './util/menu-width';\n\nconst $htmlClasses = window.document.documentElement.classList;\n\n\n\nexport class MenuItem  {static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{ selector: 'li' }, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\n\nexport class SubMenu  {static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{ selector: 'ul' }, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\n\nexport class AlphaGlobalHeader implements AfterContentInit, AfterViewInit {\n\n\tprivate _isOpen: boolean;\n\n\t// search input open class\n\tpublic searchOpenClass: string;\n\n\t// top level menu items\n\t menuItems: QueryList< ElementRef >;\n\n\t// sub menus\n\t subMenus: QueryList< ElementRef >;\n\n\t// menu container\n\t mainMenu: ElementRef;\n\n\t home: Array<string>;\n\t search: boolean;\n\t searchAction: string;\n\t languages: Array< any >;\n\n\t onMenuClick ( event ): void {\n\n\t\tif ( event.target.classList.contains ( 'sub-menu-toggle' ) )  {\n\n\t\t\tevent.target.parentNode.classList.toggle( 'open' );\n\t\t}\n\t}\n\n\t public get opened(): boolean {\n\t\treturn this._isOpen;\n\t}\n\n\tpublic set collapsed( value: boolean ) {\n\n\t\tif ( value ) {\n\t\t\tthis.elRef.nativeElement.classList.add( 'collapsed' );\n\t\t} else {\n\t\t\tthis.elRef.nativeElement.classList.remove( 'collapsed' );\n\t\t}\n\n\t}\n\n\tpublic constructor(\n\t\tprivate elRef: ElementRef\n\t) {\n\n\t}\n\n\t/**\n\t * Prepare sub-menu toggles\n\t */\n\tpublic ngAfterContentInit(): void {\n\n\t\tthis.subMenus\n\t\t\t.map( elRef => elRef.nativeElement )\n\t\t\t// .filter( elRef => elRef.nativeElement.classList.contains( 'menu-item-has-children' ) )\n\t\t\t.forEach(subMenu => {\n\n\t\t\t\tconst tog = document.createElement( 'span' );\n\t\t\t\t\ttog.classList.add( 'sub-menu-toggle' );\n\n\t\t\t\tsubMenu.parentNode.insertBefore( tog, subMenu );\n\n\t\t\t});\n\n\t}\n\n\t/**\n\t * After view and content has been rendered, check the menu widths\n\t */\n\tngAfterViewInit(): void {\n\n\t\t// use our common menu sizing lib\n\t\tregisterMenu( this.mainMenu.nativeElement, {\n\n\t\t\t// map config properties to css vars\n\t\t\tminItemSize : '@item-size',\n\t\t\titemPadding : '@item-padding',\n\t\t\tfontSize : '@item-font-size',\n\t\t\treservedWidth : '@menu-reserved-width',\n\n\t\t\tonCollapse : () => {\n\t\t\t\tthis.collapsed = true;\n\t\t\t},\n\t\t\tonExpand : () => {\n\t\t\t\tthis.collapsed = false;\n\t\t\t}\n\n\t\t} ).check();\n\n\t}\n\t/**\n\t * Close Menu\n\t */\n\tpublic close(): void {\n\t\t$htmlClasses.remove( 'nav-open' );\n\t\tthis._isOpen = false;\n\t}\n\n\t/**\n\t * Open Menu\n\t */\n\tpublic open(): void {\n\t\t$htmlClasses.add( 'nav-open' );\n\t\tthis._isOpen = true;\n\t}\n\n\t/**\n\t * Toggle Menu\n\t */\n\tpublic toggleMenu(): void {\n\t\tif ( this.opened ) {\n\t\t\tthis.close();\n\t\t} else {\n\t\t\tthis.open();\n\t\t}\n\t}\n\n\t/**\n\t * Toggle Search Input\n\t */\n\tpublic toggleSearchInput(): void {\n\t\tthis.searchOpenClass = this.searchOpenClass === 'open' ? '' : 'open';\n\t}\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n\tselector : 'alpha-global-header',\n\ttemplate : `\n\t<a *ngIf=\"home\" class=\"question-mark icon-logo\" id=\"mobileLogo\" [routerLink]=\"home\"></a>\n\t<div class=\"menu-wrapper\">\n\t\t<div class=\"menu-container\">\n\n\t\t\t<span id=\"closeButton\" class=\"icon-close-thin\" (click)=\"close()\"></span>\n\n\n\t\t\t<div *ngIf=\"home\" class=\"before-menu\">\n\t\t\t\t<a class=\"question-mark icon-logo\" [routerLink]=\"home\"></a>\n\t\t\t</div>\n\n\t\t\t<ul #mainMenu class=\"main-menu collapsible\">\n\n\t\t\t\t<ng-content></ng-content>\n\n\t\t\t\t<ng-container *ngIf=\"languages\">\n\t\t\t\t\t<li class=\"language-menu bg-darker menu-item menu-item-has-children\">\n\t\t\t\t\t\t<a class=\"icon-globe\"></a>\n\t\t\t\t\t\t<a class=\"language-menu-link\" href=\"#\">Languages</a>\n\t\t\t\t\t\t<span class=\"sub-menu-toggle\"></span>\n\t\t\t\t\t\t<ul class=\"sub-menu\">\n\t\t\t\t\t\t\t<li *ngFor=\"let language of languages\" class=\"menu-item \"><a [href]=\"language.href\">{{ language.label }}</a></li>\n\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</li>\n\t\t\t\t</ng-container>\n\n\t\t\t\t<ng-container *ngIf=\"search\">\n\t\t\t\t\t<li class=\"menu-item search-element search-element-toggle\" (click)=\"toggleSearchInput()\">\n\t\t\t\t\t\t<a class=\"menu-search-label icon-search\"></a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<div id=\"menuSearchArea\" class=\"menu-search-area {{ searchOpenClass }}\">\n\t\t\t\t\t\t<form class=\"menu-search\" [action]=\"searchAction\">\n\t\t\t\t\t\t\t<div class=\"menu-search-input-wrapper\">\n\t\t\t\t\t\t\t\t<input class=\"menu-search-input\" type=\"text\" name=\"s\" value=\"\" placeholder=\"Search\">\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"search-form-close icon-close-thin\" (click)=\"toggleSearchInput()\"></div>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\t\t\t\t</ng-container>\n\n\t\t\t</ul>\n\n\t\t</div>\n\t</div>\n\n\t<div class=\"menu-toggle\" (click)=\"toggleMenu()\"><i></i></div>\n  \t`,\n\tstyleUrls: ['../../../assets/less/styles/header.less'],\n\tencapsulation : ViewEncapsulation.None\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'menuItems': [{ type: ContentChildren, args: [MenuItem, { descendants : false, read: ElementRef }, ] },],\n'subMenus': [{ type: ContentChildren, args: [SubMenu, { descendants : true, read: ElementRef }, ] },],\n'mainMenu': [{ type: ViewChild, args: ['mainMenu', ] },],\n'home': [{ type: Input, args: ['home', ] },],\n'search': [{ type: Input, args: ['search', ] },],\n'searchAction': [{ type: Input, args: ['searchAction', ] },],\n'languages': [{ type: Input, args: ['languages', ] },],\n'onMenuClick': [{ type: HostListener, args: ['click', [ '$event' ], ] },],\n'opened': [{ type: HostBinding, args: ['class.open', ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}